{"paragraphs":[{"title":"1. Read Text File","text":"import spark.implicits._\nimport org.apache.spark.sql.Encoder\n\n val log1=spark.sparkContext.textFile(\"s3://fc-datapipeline/logs/*.gz\")","user":"anonymous","dateUpdated":"2020-12-07T09:36:13+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1607319294732_-1882780388","id":"20181003-085420_122542733","dateCreated":"2020-12-07T05:34:54+0000","dateStarted":"2020-12-07T09:34:43+0000","dateFinished":"2020-12-07T09:34:45+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:38871"},{"title":"2.log 파일 내용 확인","text":"log1.take(10).foreach(println)","user":"anonymous","dateUpdated":"2020-12-07T09:34:48+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1607319294739_628112022","id":"20181003-090735_345589154","dateCreated":"2020-12-07T05:34:54+0000","dateStarted":"2020-12-07T09:34:48+0000","dateFinished":"2020-12-07T09:34:58+0000","status":"FINISHED","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:38872"},{"title":"3. Line Parser 생성","text":"import org.json4s._\nimport org.json4s.jackson.JsonMethods._\nimport org.json4s.JsonDSL._\n\ncase class Cflog(base_date: String, adid: String, uuid: String,name: String, timestamp: String, gtmTimes: String, screen_name: String\n                , item_id: String, content_type: String, item_category: String, is_zb_agent: String, building_id: String, area_type_id: String\n                , agent_id: String, status: String , button_name: String) \n\ndef parseRawJson(line: String) = {\n     val pieces = line.split(\"\\\\|\") \n     \n     val adid = pieces.apply(1).toString\n     val uuid = pieces.apply(2).toString\n     val name = pieces.apply(3).toString\n     val timestamp = pieces.apply(8).toString\n     val gtmTimes =pieces.apply(7).toString  \n    //JSON Parse\n    val jsonString = pieces.apply(9).toString\n    implicit val formats = DefaultFormats\n    val result = parse(jsonString)\n\n    var screen_name      = (result \\ \"screen_name\").extractOpt[String].getOrElse(\"NULL\").replaceAll(\"nil\", \"NULL\")\n    var item_id           = (result \\ \"item_id\").extractOpt[String].getOrElse(\"NULL\").replaceAll(\"nil\", \"NULL\")\n    val\tcontent_type     = (result \\ \"content_type\").extractOpt[String].getOrElse(\"NULL\").replaceAll(\"nil\", \"NULL\")\n    val\titem_category    = (result \\ \"item_category\").extractOpt[String].getOrElse(\"NULL\").replaceAll(\"nil\", \"NULL\")\n    val\tis_zb_agent      = (result \\ \"is_zb_agent\").extractOpt[String].getOrElse(\"NULL\").replaceAll(\"nil\", \"NULL\")\n    val\tbuilding_id      = (result \\ \"building_id\").extractOpt[String].getOrElse(\"NULL\").replaceAll(\"nil\", \"NULL\")\n    val\tarea_type_id     = (result \\ \"area_type_id\").extractOpt[String].getOrElse(\"NULL\").replaceAll(\"nil\", \"NULL\")\n    val\tagent_id         = (result \\ \"agent_id\").extractOpt[String].getOrElse(\"NULL\").replaceAll(\"nil\", \"NULL\")\n    val\tbutton_name         = (result \\ \"button_name\").extractOpt[String].getOrElse(\"NULL\").replaceAll(\"nil\", \"NULL\")\n    val status  = (result \\ \"status\").extractOpt[String].getOrElse(\"NULL\").replaceAll(\"nil\", \"NULL\")\n    val base_date = timestamp.substring(0,10)\n    \n    \n    Cflog(base_date, adid, uuid, name, timestamp, gtmTimes, screen_name, item_id, content_type, item_category, is_zb_agent, building_id, area_type_id, agent_id, status , button_name)\n}","user":"anonymous","dateUpdated":"2020-12-07T09:37:42+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"import org.json4s._\nimport org.json4s.jackson.JsonMethods._\nimport org.json4s.JsonDSL._\ndefined class Cflog\nparseRawJson: (line: String)Cflog\n"}]},"apps":[],"jobName":"paragraph_1607319294740_334563484","id":"20181003-090705_731341499","dateCreated":"2020-12-07T05:34:54+0000","dateStarted":"2020-12-07T09:37:42+0000","dateFinished":"2020-12-07T09:37:43+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:38873"},{"title":"4. 비정형데이터 -> DataFrame","text":"val logsDFAll = log1.map(line => parseRawJson(line)).toDF()\nlogsDFAll.createOrReplaceTempView(\"logs\")\n","user":"anonymous","dateUpdated":"2020-12-07T09:37:46+0000","config":{"editorSetting":{"language":"scala","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/scala","title":true,"results":{},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"logsDFAll: org.apache.spark.sql.DataFrame = [base_date: string, adid: string ... 14 more fields]\n"}]},"apps":[],"jobName":"paragraph_1607319294740_-784624088","id":"20181003-105118_1923466297","dateCreated":"2020-12-07T05:34:54+0000","dateStarted":"2020-12-07T09:37:46+0000","dateFinished":"2020-12-07T09:37:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:38874"},{"title":"5. Spark SQL","text":"%sql\n\nselect *\nfrom logs","user":"anonymous","dateUpdated":"2020-12-07T09:37:50+0000","config":{"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/sql","title":true,"results":{"0":{"graph":{"mode":"table","height":300,"optionOpen":false,"setting":{"table":{"tableGridState":{},"tableColumnTypeState":{"names":{"base_date":"string","adid":"string","uuid":"string","name":"string","timestamp":"string","gtmTimes":"string","screen_name":"string","item_id":"string","content_type":"string","item_category":"string","is_zb_agent":"string","building_id":"string","area_type_id":"string","agent_id":"string","status":"string","button_name":"string"},"updated":false},"tableOptionSpecHash":"[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]","tableOptionValue":{"useFilter":false,"showPagination":false,"showAggregationFooter":false},"updated":false,"initialized":false}},"commonSetting":{}}}},"enabled":true,"fontSize":9},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1607319294740_209735068","id":"20181003-105334_1651986733","dateCreated":"2020-12-07T05:34:54+0000","dateStarted":"2020-12-07T09:37:50+0000","dateFinished":"2020-12-07T09:38:01+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:38875","errorMessage":""},{"text":"%sql\n","user":"anonymous","dateUpdated":"2020-12-07T05:34:54+0000","config":{"colWidth":12,"editorMode":"ace/mode/sql","results":{},"enabled":true,"editorSetting":{"language":"sql","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"fontSize":9},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1607319294741_-749236862","id":"20181003-105546_2126516718","dateCreated":"2020-12-07T05:34:54+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:38876"}],"name":"2.readParseTXT-scala","id":"2FUFCNGSZ","noteParams":{},"noteForms":{},"angularObjects":{"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}